apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "br.com.melgarejo.apptemplateslim"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiRelease\""
            buildConfigField "String", "API_VERSION", "\"$rootProject.ext.apiVersion\""
            resValue "string", "app_name", rootProject.ext.appName
            resValue "bool", "enable_crashlytics", "true"
        }

        staging {
            initWith(buildTypes.release)
            applicationIdSuffix ".staging"
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiStaging\""
            buildConfigField "String", "API_VERSION", "\"$rootProject.ext.apiVersion\""
            resValue "string", "app_name", "\"$rootProject.ext.appName [staging]\""
            resValue "bool", "enable_crashlytics", "true"
        }

        debug {
            applicationIdSuffix ".debug"
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiStaging\""
            buildConfigField "String", "API_VERSION", "\"$rootProject.ext.apiVersion\""
            resValue "string", "app_name", "\"$rootProject.ext.appName [debug]\""
            resValue "bool", "enable_crashlytics", "false"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android support
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjavaAdapterVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Room
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    api "android.arch.persistence.room:runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlinVersion"

    // Multidex
    implementation "com.android.support:multidex:$multidexVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // LiveData + ViewModel
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"

    // Shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmerVersion"

    // Easy image
    implementation "com.github.jkwiecien:EasyImage:$easyImageVersion"

    // Stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"
}
